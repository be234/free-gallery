{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","console","log","className","map","key","src","url","alt","Title","useStorage","file","progress","setProgress","error","setError","setUrl","stroageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9a4b4d.chunk.js","sourcesContent":["  // Import the functions you need from the SDKs you need\r\n//   import { initializeApp } from \"https://www.gstatic.com/firebasejs/9.10.0/firebase-app.js\";\r\n\r\nimport firebase from 'firebase/compat/app';\r\n  import \"firebase/compat/storage\";\r\n  import \"firebase/compat/firestore\";\r\n  // TODO: Add SDKs for Firebase products that you want to use\r\n  // https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n  // Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyA3MMKIo5jJnvFYAQ8f0NT8SiIaJsZ2Kcs\",\r\n    authDomain: \"belal-firegram.firebaseapp.com\",\r\n    projectId: \"belal-firegram\",\r\n    storageBucket: \"belal-firegram.appspot.com\",\r\n    messagingSenderId: \"726234852101\",\r\n    appId: \"1:726234852101:web:d2b73e2ebab5fea8f2e56c\"\r\n  };\r\n\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\n\r\n const useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', \"desc\")\r\n      .onSnapshot(snap => {\r\n       let documents = [];\r\n        snap.forEach(doc => {\r\n            documents.push({...doc.data(), id: doc.id})\r\n        });\r\n        setDocs(documents);\r\n      })\r\n\r\n      return () => unsub();\r\n      \r\n    }, [collection])\r\n    \r\n    return { docs };\r\n }\r\n  \r\n export default useFirestore;\r\n ","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\n\r\nconst ImageGrid = () => {\r\n    const { docs } = useFirestore('images');\r\n    console.log(docs)\r\n    return ( \r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <div className=\"img-wrap\" key={doc.id}>\r\n                    <img src={doc.url} alt={\"uploaded pic \" + doc.id} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ImageGrid;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import { useEffect, useState } from \"react\";\r\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\r\n\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //references\r\n        const stroageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        stroageRef.put(file).on('state_change', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await stroageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url, createdAt })\r\n            setUrl(url);\r\n        })\r\n    }, [file])\r\n    return { progress, url, error }\r\n};\r\n\r\nexport default useStorage;","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile]);\r\n\r\n    return ( \r\n        <div className=\"progress-bar\" style={{ width: progress + \"%\" }}></div>\r\n     );\r\n}\r\n \r\nexport default ProgressBar;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const types = ['image/png', \"image/jpeg\", \"image/jpg\", \"video/mp4\"];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n        \r\n        if (selected && types.includes(selected.type)) {\r\n        setFile(selected);\r\n        setError('');\r\n\r\n        } else {\r\n            setFile(null);\r\n            setError(\"Please select an image file (png or jpeg)\");\r\n        }\r\n    }\r\n    return ( \r\n        <form>\r\n            <label>\r\n            <input type=\"file\" onChange={changeHandler} />\r\n            <span>+</span>  \r\n            </label>\r\n\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\"> { error } </div> }\r\n                {file && <div className=\"error\"> { file.name } </div> }\r\n                {file && <ProgressBar file={file} setFile={setFile} /> }\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default UploadForm;","import React from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}